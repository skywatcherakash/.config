## default layout (can be bsp, stack or float)
#yabai -m config layout bsp
#
## new window spawns to the right if vertical split, or bottom if horizontal split
#yabai -m config window_placement second_child
#
#yabai -m config top_padding 0
#yabai -m config bottom_padding 0
#yabai -m config left_padding 0
#yabai -m config right_padding 0
#yabai -m config window_gap 0
#
## -- mouse settings --
#
## center mouse on window with focus
#yabai -m config mouse_follows_focus on
#
## modifier for clicking and dragging with mouse
#yabai -m config mouse_modifier alt
## set modifier + left-click drag to move window
#yabai -m config mouse_action1 move
## set modifier + right-click drag to resize window
#yabai -m config mouse_action2 resize
#
## when window is dropped in center of another window, swap them (on edges it will split it)
#yabai -m mouse_drop_action swap
#
#
## disable specific apps
#yabai -m rule --add app="^System Settings$" manage=off
#yabai -m rule --add app="^Calculator$" manage=off
#yabai -m rule --add app="^QuickTime Player$" manage=off

###########################################################################################################################

#!/usr/bin/env sh
#YABAI STUFF

# bsp or float (default: bsp)

## Change how yabai looks
yabai -m config layout bsp
yabai -m config top_padding 1
yabai -m config bottom_padding 1
yabai -m config left_padding 1
yabai -m config right_padding 1
yabai -m config window_gap 1

# # My custom space names for my 3 monitor setup. These names are used in some of my scripts.
# yabai -m space 1 --label one
# yabai -m space 2 --label two
# yabai -m space 3 --label three
# yabai -m space 4 --label four
# yabai -m space 5 --label five
# yabai -m space 6 --label six
# yabai -m space 9 --label nine

# float system preferences. Most of these just diable Yabai form resizing them.
yabai -m rule --add app="^System Settings$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-Elements$" sticky=on layer=above manage=off
yabai -m rule --add app="^Karabiner-EventViewer$" sticky=on layer=above manage=off
yabai -m rule --add app="^Finder$" sticky=on layer=above manage=off
yabai -m rule --add app="^Disk Utility$" sticky=on layer=above manage=off
yabai -m rule --add app="^System Information$" sticky=on layer=above manage=off
yabai -m rule --add app="^Activity Monitor$" sticky=on layer=above manage=off
yabai -m rule --add label="App Store" app="^App Store$" manage=off
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$" manage=off
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="GitHub" app="^GitHub\ Desktop$" manage=off
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off

# yabai -m rule --add app="^Terminal$" sticky=on 

#find ~/Library/Parallels/Applications\ Menus/ -maxdepth 3 -type f | awk -F'/' '{ print $NF; }' | awk '{$1=$1};1' | sort | #uniq | tr "\n" "\0" | xargs -0 -I{} yabai -m rule --add app="^{}\$" title=".*" manage=on

## Some random global settings
#yabai -m config focus_follows_mouse          autoraise
#yabai -m config focus_follows_mouse          on
# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child
yabai -m config window_topmost off
#yabai -m config window_shadow float
yabai -m config window_opacity off
yabai -m config window_opacity_duration 0.00
yabai -m config active_window_opacity 1.0
#yabai -m config normal_window_opacity        0.97
#yabai -m config window_border                on | off

## WITH SIP ENABLED (Installed Limelight seperately, Don't need this)
yabai -m config window_border off

## WTIH SIP DISABLED (Limelight build into Yabai, enable it here)
#yabai -m config window_border on
#yabai -m config window_border_width 3
#yabai -m config active_window_border_color 0xFF40FF00
#yabai -m config normal_window_border_color 0x00FFFFFF
#yabai -m config insert_feedback_color        0xffd75f5f

## some other settings
yabai -m config auto_balance off
yabai -m config split_ratio 0.5
# # set mouse interaction modifier key (default: fn)
yabai -m config mouse_modifier ctrl
# set modifier + right-click drag to resize window (default: resize)
yabai -m config mouse_action2 resize
# set modifier + left-click drag to resize window (default: move)
yabai -m config mouse_action1 move

# general space settings
#yabai -m config focused_border_skip_floating  1
#yabai -m config --space 3 layout             float



#Limelight addon (Kill it and start it each time Yabai starts)
# killall limelight &>/dev/null
# limelight &>/dev/null &
    
# #Ubersicht widget bar stuff
#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-primary-jsx\"'"

#yabai -m signal --add event=space_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"
#yabai -m signal --add event=display_changed \
#action="osascript -e 'tell application \"Übersicht\" to refresh widget id \"nibar-spaces-secondary-jsx\"'"

# signals
# yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
#yabai -m signal --add event=space_changed action="yabai -m window --focus $(yabai -m query --windows --window | jq ".id")"
# yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"

#testing signals
# yabai -m signal --add event=window_destroyed action="terminal-notifier -message 'window_destroyed'"
# yabai -m signal --add event=application_terminated action="terminal-notifier -message 'application_terminated'"

## If I close the active window, focus on any other visible window.
#yabai -m signal --add event=window_destroyed action="bash /Users/jesseskelton/CustomScripts/SwitchSpaces/window-focus-on-destroy.sh"
# yabai -m signal --add event=space_changed action="export CUR_ACTIVE_APP=\"iTerm2\""

# yabai -m signal --add event=window_created action="bash /Users/rana/.config/yabai/movefocus.sh"

echo "yabai configuration loaded.."

#END
